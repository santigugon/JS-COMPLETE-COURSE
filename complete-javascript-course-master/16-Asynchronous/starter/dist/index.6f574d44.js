"use strict";const btn=document.querySelector(".btn-country"),countriesContainer=document.querySelector(".countries"),images=document.querySelector(".images"),renderCountry=function(n,e=""){const o=`    <article class="country ${e}">\n  <img class="country__img" src="${n.flag}" />\n  <div class="country__data">\n    <h3 class="country__name">${n.name}</h3>\n    <h4 class="country__region">${n.region}</h4>\n    <p class="country__row"><span>üë´</span>${(n.population/1e6).toFixed(1)}M people</p>\n    <p class="country__row"><span>üó£Ô∏è${n.languages[0].name}</span>LANG</p>\n    <p class="country__row"><span>üí∞${n.currencies[0].name}</span>CUR</p>\n  </div>\n</article>`;countriesContainer.insertAdjacentHTML("beforeEnd",o),countriesContainer.style.opacity=1},request=fetch("https://restcountries.com/v2/alpha/USA"),getCountryData=function(n){n=n.toLowerCase(),console.log(n),jsonHandler(`https://restcountries.com/v2/name/${n}`,"Country not found").then((n=>{const e=n[0].borders?.[0];if(renderCountry(n[0]),!e)throw new Error("No neighbour found");return jsonHandler(`https://restcountries.com/v2/alpha/${e}`,"Not neighbour")})).then((n=>renderCountry(n,"neighbour"))).catch((n=>{console.error(`The error is ${n}`),renderError(n)}))},asyncgetCountryData=async function(n){n=n.toLowerCase();const e=await jsonHandler(`https://restcountries.com/v2/name/${n}`,"Country not found"),o=e[0].borders?.[0];if(renderCountry(e[0]),!o)throw new Error("No neighbour found");{const n=await jsonHandler(`https://restcountries.com/v2/alpha/${o}`,"Not neighbour");renderCountry(n,"neighbour")}},renderError=function(n){console.error(n),images.insertAdjacentText("beforeend",`ERROR MESSAGE: ${n} Try again!`),images.style.opacity=1},jsonHandler=function(n,e="Something went wrong"){return fetch(n).then((n=>{if(!n.ok)throw new Error(`${e} (${n.status})`);return n.json()}))},getPosition=function(){return new Promise((function(n,e){navigator.geolocation.getCurrentPosition(n,e)}))},reverseGeoCoding=function(){getPosition().then((n=>{const{coords:e}=n,{latitude:o}=e,{longitude:r}=e;return console.log(o,r),fetch(`https://geocode.xyz/${o},${r}?geoit=json`)})).then((n=>{if(!n.ok)throw new Error("Wait for the page to cool down");return n.json()})).then((n=>{return e=(e=n.country).toLowerCase(),console.log(e),void jsonHandler(`https://restcountries.com/v2/name/${e}`,"Country not found").then((n=>{const e=n[0].borders?.[0];if(renderCountry(n[0]),!e)throw new Error("No neighbour found");return jsonHandler(`https://restcountries.com/v2/alpha/${e}`,"Not neighbour")})).then((n=>renderCountry(n,"neighbour"))).catch((n=>{console.error(`The error is ${n}`),renderError(n)}));var e})).catch((n=>renderError(n)))},getLocation=function(){};let currentImage;function createImage(n){return new Promise((function(e,o){let r=document.createElement("img");r.src=n,currentImage=r,r.classList.add("parallel"),r.addEventListener("load",(function(){images.appendChild(r),console.log("QUEE?"),e(r)})),r.addEventListener("error",(function(){o(new Error("Image not found"))}))})).then((n=>setTimeout((function(){n.remove(),i<3&&i++,3==i&&(i=1),createImage(`img/img-${i}.jpg`)}),2e3))).catch((n=>console.error(n)))}let i=1;async function whereAmIAsync(){try{const n=await getPosition(),{coords:e}=n,{latitude:o}=e,{longitude:r}=e;if(console.log(n),!n)throw new Error("Could not get your positiion");const t=await fetch(`https://geocode.xyz/${o},${r}?geoit=json`);if(console.log(t.ok),!t.ok)throw new Error("Could not get country data");const c=await t.json();console.log(c);const s=c.country;await asyncgetCountryData(s);return s}catch(n){throw renderError(n),n}}async function returningValuesAsync(){try{const n=await whereAmIAsync();console.log(n),console.log("Finished getting location!")}catch(n){renderError(n)}}function wait(n){return new Promise((function(e,o){setTimeout((function(){console.log(n,"seconds"),e()}),1e3*n)}))}function createImage(n){return new Promise((function(e,o){let r=document.createElement("img");r.src=n,currentImage=r,r.addEventListener("load",(function(){images.appendChild(r),console.log("QUEE?"),e(r)})),r.addEventListener("error",(function(){o(new Error("Image not found"))}))}))}btn.addEventListener("click",whereAmIAsync);const loadNPause=async function(){try{for(let n=1;n<=3;n++){const e=await createImage(`img/img-${n}.jpg`);console.log(e),await wait(2),e.remove()}}catch(n){renderError(n)}},loadAll=async function(){let n=["img/img-1.jpg","img/img-2.jpg","img/img-3.jpg"];Promise.all(n.map((n=>{createImage(n)})))};loadAll();
//# sourceMappingURL=index.6f574d44.js.map
