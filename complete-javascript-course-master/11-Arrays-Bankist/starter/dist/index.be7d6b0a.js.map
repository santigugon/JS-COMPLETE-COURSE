{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n\n// Data\nconst account1 = {\n  owner: 'Jonas Schmedtmann',\n  movements: [200, 450, -400, 3000, -650, -130, 70, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n  act: 'NO',\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n  act: 'NO',\n};\n\nconst account3 = {\n  owner: 'Steven Thomas Williams',\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n  act: 'NO',\n};\n\nconst account4 = {\n  owner: 'Sarah Smith',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 4444,\n  act: 'NO',\n};\n\nconst accounts = [account1, account2, account3, account4];\n\n// Elements\nconst app = document.querySelector('.app');\n\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\nconst generateUserName = owner => {\n  let username = [];\n  username.push(owner.trimStart()[0]);\n  username.push(owner[owner.indexOf(' ') + 1]);\n\n  if (owner.indexOf(' ') !== owner.lastIndexOf(' ')) {\n    username.push(owner[owner.lastIndexOf(' ') + 1]);\n  }\n  username = username.join('').toLowerCase();\n\n  return username;\n};\n\nconst computeUserName = function (arr) {\n  arr.forEach(account => {\n    account.username = generateUserName(account.owner);\n  });\n};\ncomputeUserName(accounts);\n\nconst displayMovements = function (movements) {\n  containerMovements.innerHTML = '';\n  movements.forEach(function (mov, i) {\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\n\n    const html = `<div class=\"movements\">\n      <div class=\"movements__row\">\n        <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n        <div class=\"movements__value\">${mov}€</div>\n      </div>\n      `;\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n\nconst calculateBalance = function (arr) {\n  const balance = arr.reduce((acum, curr) => (acum += curr), 0);\n  return (labelBalance.textContent = ` ${balance}€`);\n};\nconst calculateDeposit = function (arr) {\n  const deposit = arr\n    .filter(mov => mov > 0)\n    .reduce((acc, curr, i, arr) => {\n      console.log(arr);\n      return (acc += curr);\n    }, 0);\n  return (labelSumIn.textContent = `${deposit}€`);\n};\n\nconst calculateWithdrawals = function (arr) {\n  const withdrawal = arr\n    .filter(mov => mov < 0)\n    .reduce((acc, curr, i, arr) => {\n      console.log(arr);\n      return (acc += curr);\n    }, 0);\n  return (labelSumOut.textContent = `${Math.abs(withdrawal)}€`);\n};\n\nconst accountSummary = function (account) {\n  displayMovements(account.movements);\n  calculateBalance(account.movements);\n  calculateDeposit(account.movements);\n  calculateWithdrawals(account.movements);\n  calculateInterest(account.movements, account.interestRate);\n};\n\nconst calculateInterest = function (arr, interestRate) {\n  const interest = arr\n    .filter(mov => mov > 0)\n    .map(mov => (mov * interestRate) / 100)\n    .filter(int => int > 1)\n    .reduce((acc, curr) => (acc += curr), 0);\n  return (labelSumInterest.textContent = `${interest}€`);\n};\n\nconst login = function (username, pin) {\n  if (accounts.find(acc => acc.act === 'Active')) {\n    alert('LOG OUT FIRST');\n  } else {\n    const account = accounts.find(acc => {\n      return acc.username == username;\n    });\n    if (account.pin === pin) {\n      app.style.opacity = 100;\n      inputLoginUsername.value = inputLoginPin.value = '';\n      inputLoginPin.blur();\n\n      accountSummary(account);\n      account.act = 'Active';\n      labelWelcome.textContent = `Welcome, ${account.owner.slice(\n        0,\n        account.owner.indexOf(' ')\n      )}`;\n      labelTimer.textContent = setTimeout(\n        logOut,\n        5 * 60 * 1000,\n        account,\n        username,\n        pin\n      );\n    } else {\n      alert('Wrong password or username!');\n    }\n  }\n};\n\nbtnLogin.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const username = inputLoginUsername.value;\n  const pin = Number(inputLoginPin.value);\n\n  login(username, pin);\n});\n\nconst logOut = function (actAccount, username, pin) {\n  if (actAccount.pin === pin && actAccount.username === username) {\n    app.style.opacity = 0;\n    inputCloseUsername.value = inputClosePin.value = '';\n    actAccount.act = 'NO';\n    console.log(actUser());\n    labelWelcome.textContent = 'Log in to get started';\n  } else {\n    alert('Wrong password or username!');\n  }\n};\nconst actUser = () => accounts.find(acc => acc.act === 'Active');\n\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n  const user = inputCloseUsername.value;\n  const pin = Number(inputClosePin.value);\n  let act = actUser();\n  logOut(act, user, pin);\n});\n\nconst transferMoney = function (receiver, amount) {\n  const currUser = actUser();\n  if (currUser.movements.reduce((acc, mov) => (acc += mov), 0) >= amount) {\n    currUser.movements.push(-amount);\n    const receiverAcc = accounts.find(acc => acc.username === receiver);\n    receiverAcc.movements.push(amount);\n    accountSummary(currUser);\n    inputTransferTo.value = '';\n    inputLoanAmount.value = 0;\n  } else {\n    alert('Not enough money, try another amount');\n  }\n};\n\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n  const receiver = inputTransferTo.value;\n  const amount = Number(inputTransferAmount.value);\n  transferMoney(receiver, amount);\n});\n\nconst maxDeposit = function (acc) {\n  return acc.movements.reduce((acc, curr) => {\n    if (curr > acc) {\n      acc = curr;\n    }\n    return acc;\n  }, 0);\n};\n\nconst checkLoan = function (loan) {\n  const currUser = actUser();\n  console.log(maxDeposit(currUser));\n\n  if (loan < maxDeposit(currUser) * 0.1) {\n    currUser.movements.push(loan);\n    accountSummary(currUser);\n  } else {\n    alert('Not enough credit');\n  }\n};\n\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n  const loanAmount = Number(inputLoanAmount.value);\n  checkLoan(loanAmount);\n});\n\nlet sorted = false;\n\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const reverseString = function (arr, sort) {\n    if (sort === false) {\n      sorted = true;\n      return arr.movements.slice().reverse();\n    } else if (sort === true) {\n      sorted = false;\n      return arr.movements;\n    }\n  };\n  //  reverseString = reversedString();\n\n  displayMovements(reverseString(actUser(), sorted));\n});\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\nconst currencies = new Map([\n  ['USD', 'United States dollar'],\n  ['EUR', 'Euro'],\n  ['GBP', 'Pound sterling'],\n]);\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\nconst bankDeposits = accounts\n  .flatMap(acc => acc.movements)\n  .filter(mov => mov > 0)\n  .reduce((acc, mov) => (acc += mov), 0);\n\nconsole.log(bankDeposits);\nconst bankDeposits1000 = accounts\n  .flatMap(acc => acc.movements)\n  .filter(mov => mov > 1000)\n  .reduce((acc, mov) => (acc += 1), 0);\n\nconsole.log(bankDeposits1000);\n\n//Coding Challenge #4\n\n//Arrays excercise\nconst dogs = [\n  { weight: 22, curFood: 250, owners: ['Alice', 'Bob'] },\n  { weight: 8, curFood: 200, owners: ['Matilda'] },\n  { weight: 13, curFood: 275, owners: ['Sarah', 'John'] },\n  { weight: 32, curFood: 340, owners: ['Michael'] },\n];\n\nlet createRecommendedPortion = dogs =>\n  dogs.map(dog => (dog.portion = dog.weight ** 0.75 * 28));\n\nlet enoughPortion = owner => {\n  let dog = dogs.find(dog => dog.owners.includes(owner));\n  dog.curFood >= dog.portion * 0.9\n    ? dog.portion <= dog.portion * 1.1\n      ? console.log('Your dog is eating enough')\n      : console.log('Your dog is eating too much')\n    : console.log('Your dog is not eating enough');\n};\ncreateRecommendedPortion(dogs);\n\nconsole.log(dogs);\nenoughPortion('Sarah');\nconst eatingTooMuch = dogs.filter(dog => dog.curFood > dog.portion * 1.1);\nconst eatingTooLittle = dogs.filter(dog => dog.curFood < dog.portion * 0.9);\n\nconst displayOwnersDogProblems = function () {\n  let ownersMuch = [];\n  eatingTooMuch.forEach(dog => {\n    ownersMuch.push(dog.owners);\n  });\n\n  console.log(`${ownersMuch.flat().join(' and ')} dogs are eating too much`);\n\n  let ownersLittle = [];\n  eatingTooLittle.forEach(dog => {\n    ownersLittle.push(dog.owners);\n  });\n\n  console.log(\n    `${ownersLittle.flat().join(' and ')} dogs are eating too little`\n  );\n};\ndisplayOwnersDogProblems();\n\nconsole.log(dogs.some(dog => dog.portion === dog.curFood));\nconsole.log(\n  dogs.some(\n    dog => dog.curFood > dog.portion * 0.9 && dog.curFood < dog.portion * 1.1\n  )\n);\nconsole.log(\n  dogs.filter(\n    dog => dog.curFood > dog.portion * 0.9 && dog.curFood < dog.portion * 1.1\n  )\n);\nlet orderDogs = dogs;\norderDogs.portion.sort((a, b) => a - b);\nconsole.log(orderDogs);\n\n/*\nconst convertTitleCase = function (text) {\n  return text\n    .split(' ')\n    .map(letters => {\n      let capitalLetter;\n      if (exceptions.some(exception => exception == letters)) {\n        capitalLetter = letters[0];\n      } else {\n        capitalLetter = letters[0].toUpperCase();\n      }\n      return capitalLetter.concat(letters.slice(1));\n    })\n    .join(' ');\n};\nconst exceptions = ['a', 'an', 'the', 'but', 'or', 'on', 'in', 'with'];\n\nconsole.log(\n  convertTitleCase(\n    'I am here in a lovely day with Nanis enjoying my life and my time with her'\n  )\n);\n/*\nconst calcAverageHumanAge = dogs => {\n  let humanYears = dogs\n    .map(dog => (dog <= 2 ? dog * 2 : 16 + dog * 4))\n    .filter(dog => dog > 18)\n    .reduce((acc, curr, I, arr) => acc + curr / arr.length, 0);\n  return humanYears;\n};\nconsole.log(calcAverageHumanAge([16, 6, 10, 5, 6, 1, 4]));\n\n\n\nconst calcAverageHumanAge = function (dogs) {\n  let humanYears = dogs.map(dog => (dog <= 2 ? dog * 2 : 16 + dog * 4));\n  console.log(humanYears);\n  let overAge = humanYears.filter(dog => dog > 18);\n  let averageAge = overAge.reduce(\n    (acc, curr, I, arr) => acc + curr / arr.length,\n    0\n  );\n  return averageAge;\n};\n\n\nconst deposits = movements.filter(mov => mov > 0);\nconsole.log(deposits);\n\nconst withdrawals = movements.filter(mov => mov < 0);\nconsole.log(withdrawals);\n\nlet balanceForOf = 0;\n\nfor (let mov of movements) {\n  balanceForOf += mov;\n}\nconsole.log(balanceForOf);\n\nconsole.log(balance);\n\n\nconst eurToUSD = 1.1;\nconst movementsUSD = movements.map(mov => Math.floor(mov * eurToUSD));\nconst movementsUSDF = [];\n\nfor (let mov of movements) {\n  movementsUSDF.push(Math.floor(eurToUSD * mov));\n}\n\nconsole.log(movements);\nconsole.log(movementsUSD);\nconsole.log(movementsUSDF);\n\nconst generateUserName = owner => {\n  let username = [];\n  username.push(owner.trimStart()[0]);\n  username.push(owner[owner.indexOf(' ') + 1]);\n\n  if (owner.indexOf(' ') !== owner.lastIndexOf(' ')) {\n    username.push(owner[owner.lastIndexOf(' ') + 1]);\n  }\n  username = username.join('').toLowerCase();\n  console.log(username);\n\n  return username;\n};\n\nconst computeUserName = function (arr) {\n  arr.forEach(account => {\n    account.username = generateUserName(account.owner);\n    console.log(account);\n  });\n};\ncomputeUserName(accounts);\nonce upon a younher year when al the shadows disappear the animals came outside to play\nMas que nada esto es una prueba para ver que tal esta la responsividad del sistema cuando escribo en modo miracast ya que tengo miedo de que la funcionalidad no sea la optima me encanta la idea  de qie aqio se ve tptañ,emte fluido pero del otro lado no tanto. esot es normal porque \n\n*/\n/////////////////////////////////////////////////\n"],"names":["account1","owner","movements","interestRate","pin","act","account2","account3","account4","accounts","app","document","querySelector","labelWelcome","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","generateUserName","username","push","trimStart","indexOf","lastIndexOf","join","toLowerCase","computeUserName","arr","forEach","account","displayMovements","innerHTML","mov","i","type","html","insertAdjacentHTML","calculateBalance","balance","reduce","acum","curr","textContent","calculateDeposit","deposit","filter","acc","console","log","calculateWithdrawals","withdrawal","Math","abs","accountSummary","calculateInterest","interest","map","int","login","find","alert","style","opacity","value","blur","slice","setTimeout","logOut","addEventListener","e","preventDefault","Number","actAccount","actUser","user","transferMoney","receiver","amount","currUser","maxDeposit","checkLoan","loan","loanAmount","sorted","sort","reverse","currencies","Map","bankDeposits","flatMap","bankDeposits1000","dogs","weight","curFood","owners","createRecommendedPortion","dog","portion","enoughPortion","includes","eatingTooMuch","eatingTooLittle","displayOwnersDogProblems","ownersMuch","flat","ownersLittle","some","orderDogs","a","b"],"version":3,"file":"index.be7d6b0a.js.map"}