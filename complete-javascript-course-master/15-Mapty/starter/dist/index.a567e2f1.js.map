{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n// prettier-ignore\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst form = document.querySelector('.form');\n\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n// const map = document.getElementById('map');\nconst map = L.map('map');\nconst botonAgregar = document.querySelector('.botonprueba1');\nconst botonQuitar = document.querySelector('.botonprueba2');\nconst now = new Date();\nconst resetBtn = document.querySelector('.reset__btn');\nconst editBtn = document.querySelector('.edit__btn');\nconst eraseBtn = document.querySelector('.erase__btn');\nconst formBtn = document.querySelector('.form__btn');\nconst dateOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric',\n  // weekday: 'long',\n};\nconst workoutElement = document.querySelector('.workout');\nconst sateliteImg = document.querySelector('#satelite');\nconst relieveImg = document.querySelector('#relieve');\nconst findMe = document.querySelector('#findMe');\n\nlet Id;\nlet trainingType;\nlet popUpContent;\nlet lastTraining;\nlet workoutsObj = [];\nlet mapEvent;\nlet mapType;\nlet swappingTypes = false;\nlet editingWorkout;\nlet editingTime = false;\n// const locale = navigator.language;\n// console.log(locale);\n//console.log(localStorage.getItem('workout'));\n\nconst prueba = e => {};\n\nconst editionWorkout = function () {};\n\nclass App {\n  constructor() {\n    this._getLocalStorage();\n    this._getPosition();\n    workoutsObj.forEach(workout => this._markerRender(workout));\n    this._toggleElevationField();\n    map.on('click', this._showForm);\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    containerWorkouts.addEventListener('click', this._moveToPopUp);\n    resetBtn.addEventListener('click', this._resetLocalStorage);\n    editBtn.addEventListener('click', this._showEditForm);\n    eraseBtn.addEventListener('click', this._deleteWorkout);\n\n    sateliteImg.addEventListener(\n      'click',\n      function () {\n        mapType = 1;\n\n        localStorage.removeItem('mapType');\n        localStorage.setItem('mapType', JSON.stringify(mapType));\n\n        swappingTypes = true;\n        this._getPosition();\n      }.bind(this)\n    );\n\n    relieveImg.addEventListener(\n      'click',\n      function () {\n        mapType = 0;\n\n        localStorage.removeItem('mapType');\n        localStorage.setItem('mapType', JSON.stringify(mapType));\n\n        swappingTypes = true;\n        this._getPosition();\n      }.bind(this)\n    );\n\n    findMe.addEventListener(\n      'click',\n      function () {\n        swappingTypes = false;\n        this._getPosition();\n      }.bind(this)\n    );\n  }\n\n  _getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this._loadMap, function () {\n        alert('Could not get current position');\n      });\n    }\n  }\n\n  _loadMap(position) {\n    let { latitude } = position.coords;\n    let { longitude } = position.coords;\n\n    let coords = [latitude, longitude];\n\n    if (!swappingTypes) map.setView(coords, 20);\n\n    if (!mapType) {\n      mapType = 0;\n    }\n\n    if (mapType == 0) {\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution:\n          '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(map);\n    } else if (mapType == 1) {\n      L.tileLayer(\n        'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        {\n          attribution:\n            'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\n        }\n      ).addTo(map);\n    }\n  }\n  _showForm(mapE) {\n    inputType.classList.remove('hidden__option');\n    mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n\n    inputCadence.value =\n      inputDistance.value =\n      inputDuration.value =\n      inputDuration.value =\n      inputElevation.value =\n        '';\n  }\n\n  _newWorkout(e) {\n    if (editingTime) return;\n    let popUpClass;\n    let mark = false;\n\n    e.preventDefault();\n    const { lat, lng } = mapEvent.latlng;\n    const clickCoords = [lat, lng];\n    if (\n      !inputCadence\n        .closest('.form__row')\n        .classList.contains('form__row--hidden')\n    ) {\n      if (!Id) {\n        Id = 0;\n      }\n\n      if (\n        inputDistance.value > 0 &&\n        inputDuration.value > 0 &&\n        inputCadence.value > 0\n      ) {\n        workoutsObj.push(\n          (lastTraining = new Running(\n            Id,\n            inputDistance.value,\n            inputDuration.value,\n            clickCoords,\n            inputCadence.value\n          ))\n        );\n        Id += 1;\n        trainingType = 'running';\n\n        popUpContent = ` 🏃‍♂️${lastTraining.description}`;\n        popUpClass = 'running-popup';\n        this._workoutRender(lastTraining);\n        mark = true;\n      } else {\n        alert('Please enter positive values');\n      }\n    } else if (\n      !inputElevation\n        .closest('.form__row')\n        .classList.contains('form__row--hidden')\n    ) {\n      if (!Id) {\n        Id = 0;\n      }\n      if (inputDistance.value > 0 && inputDuration.value > 0) {\n        workoutsObj.push(\n          (lastTraining = new Cycling(\n            Id,\n            inputDistance.value,\n            inputDuration.value,\n            clickCoords,\n            inputElevation.value\n          ))\n        );\n        Id += 1;\n        trainingType = 'cycling';\n        this._workoutRender(lastTraining);\n\n        popUpContent = `🚴 ${lastTraining.description} `;\n        popUpClass = 'cycling-popup';\n        mark = true;\n      } else {\n        alert('Please enter a positive value');\n      }\n    }\n    form.classList.add('hidden');\n\n    this._markerRender(lastTraining);\n    this._setLocalStorage();\n  }\n\n  _editWorkout = e => {\n    if (!editingTime) return;\n    eraseBtn.classList.remove('hidden__option');\n    form.addEventListener('submit', this._infoModifyWorkout);\n    inputType.classList.add('hidden__option');\n\n    let workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n    let id = workoutEl.dataset.id;\n\n    editingWorkout = workoutsObj[id];\n\n    let { name } = editingWorkout;\n    let { cadence } = editingWorkout;\n    let { duration } = editingWorkout;\n    let { distance } = editingWorkout;\n    let { elevationGain } = editingWorkout;\n\n    inputDistance.value = distance;\n    inputDuration.value = duration;\n\n    if (name == 'Running') {\n      inputCadence.value = cadence;\n      if (\n        inputCadence\n          .closest('.form__row')\n          .classList.contains('form__row--hidden')\n      ) {\n        inputType.value = 'running';\n        inputElevation\n          .closest('.form__row')\n          .classList.toggle('form__row--hidden');\n        inputCadence\n          .closest('.form__row')\n          .classList.toggle('form__row--hidden');\n      }\n    } else if (name == 'Cycling') {\n      inputElevation.value = elevationGain;\n      if (\n        inputElevation\n          .closest('.form__row')\n          .classList.contains('form__row--hidden')\n      ) {\n        inputType.value = 'cycling';\n        inputElevation\n          .closest('.form__row')\n          .classList.toggle('form__row--hidden');\n        inputCadence\n          .closest('.form__row')\n          .classList.toggle('form__row--hidden');\n      }\n    }\n    console.log(editingWorkout);\n    console.log('\\n\\n');\n    form.classList.remove('hidden');\n  };\n  _deleteWorkout = () => {\n    let deleteId = editingWorkout.id;\n\n    delete workoutsObj[deleteId];\n    this._setLocalStorage();\n\n    location.reload();\n  };\n  _showEditForm = () => {\n    if (!editingTime) {\n      editingTime = true;\n      editBtn.textContent = 'END EDITION';\n\n      containerWorkouts.addEventListener('click', this._editWorkout.bind(App));\n      formBtn.textContent = 'SUBMIT EDITION';\n    } else if (editingTime) {\n      editingTime = false;\n      editBtn.textContent = 'EDIT';\n      formBtn.textContent = 'SUBMIT TRAINING';\n      form.classList.add('hidden');\n      form.removeEventListener('submit', this._infoModifyWorkout);\n    }\n  };\n\n  _toggleElevationField() {\n    inputType.addEventListener('change', function (e) {\n      inputElevation\n        .closest('.form__row')\n        .classList.toggle('form__row--hidden');\n      inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n    });\n  }\n  _markerRender(lastTraining) {\n    if (!lastTraining) return;\n    let { coords } = lastTraining;\n    L.marker(coords)\n      .addTo(map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 200,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${lastTraining.name.toLowerCase()}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${lastTraining.name == 'Running' ? '🏃‍♂️🏃' : '🚴'}${\n          lastTraining.description\n        }`\n      )\n      .openPopup();\n  }\n\n  _workoutRender(lastTraining) {\n    if (!lastTraining) return;\n    let html = `<li class=\"workout workout--${lastTraining.name.toLowerCase()}\" data-id=${\n      lastTraining.id\n    }>\n    <h2 class=\"workout__title\">${lastTraining.description}</h2>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">${\n        lastTraining.name === 'Running' ? '🏃‍♂️' : '🚴'\n      }</span>\n      <span class=\"workout__value\">${lastTraining.distance}</span>\n      <span class=\"workout__unit\">km</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">⏱</span>\n      <span class=\"workout__value\">${lastTraining.duration}</span>\n      <span class=\"workout__unit\">min</span>\n    </div>`;\n\n    if (lastTraining.name === 'Running') {\n      html += `<div class=\"workout__details\">\n      <span class=\"workout__icon\">⚡️</span>\n      <span class=\"workout__value\">${lastTraining.pace}</span>\n      <span class=\"workout__unit\">km/hr</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">🦶🏼</span>\n      <span class=\"workout__value\">${lastTraining.cadence}</span>\n      <span class=\"workout__unit\">spm</span>\n    </div>\n  </li>\n`;\n    } else if (lastTraining.name === 'Cycling') {\n      html += ` <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${lastTraining.speed}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⛰</span>\n            <span class=\"workout__value\">${lastTraining.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>`;\n    }\n    form.insertAdjacentHTML('afterend', html);\n  }\n  _infoModifyWorkout = e => {\n    e.preventDefault();\n    if (!editingTime) return;\n    console.log(editingWorkout);\n    let editingId = editingWorkout.id;\n    let speedPace = ((inputDistance.value / inputDuration.value) * 60).toFixed(\n      2\n    );\n\n    if (editingWorkout.name == 'Running') {\n      workoutsObj[editingId].cadence = inputCadence.value;\n      workoutsObj[editingId].pace = speedPace;\n    } else if (editingWorkout.name == 'Cycling') {\n      workoutsObj[editingId].elevationGain = inputElevation.value;\n      workoutsObj[editingId].speed = speedPace;\n    }\n    workoutsObj[editingId].distance = inputDistance.value;\n    workoutsObj[editingId].duration = inputDuration.value;\n\n    this._setLocalStorage();\n    this._workoutRender(editingWorkout);\n\n    location.reload();\n  };\n  _moveToPopUp(e) {\n    let workoutEl = e.target.closest('.workout');\n    //console.log(workoutEl);\n\n    if (!workoutEl) return;\n    let id = workoutEl.dataset.id;\n\n    console.log(id);\n    let { coords } = workoutsObj[id];\n    //console.log(workoutsObj);\n\n    map.setView(coords, 20, { animate: true, pan: { duration: 1 } });\n  }\n  _setLocalStorage() {\n    localStorage.setItem('workout', JSON.stringify(workoutsObj));\n    localStorage.removeItem('Id');\n    localStorage.setItem('Id', JSON.stringify(Id));\n  }\n  _getLocalStorage() {\n    let data = JSON.parse(localStorage.getItem('workout'));\n    mapType = JSON.parse(localStorage.getItem('mapType'));\n    Id = JSON.parse(localStorage.getItem('Id'));\n    //console.log(mapType);\n\n    if (!data) return;\n    workoutsObj = data;\n    workoutsObj.forEach(workout => {\n      this._workoutRender(workout);\n    });\n  }\n\n  _resetLocalStorage() {\n    localStorage.removeItem('workout');\n\n    localStorage.removeItem('Id');\n    Id = 0;\n    location.reload();\n  }\n}\n\nclass Workout {\n  constructor(id, distance, duration, coords) {\n    this.id = id;\n    this.distance = distance;\n    this.duration = duration;\n    this.coords = coords;\n    this.date = new Date();\n  }\n\n  _setDescription() {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    this.description = `${this.name} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n}\n\nclass Running extends Workout {\n  constructor(id, distance, duration, coords, cadence) {\n    super(id, distance, duration, coords);\n    this.name = 'Running';\n    this.cadence = cadence;\n    this.pace = ((distance / duration) * 60).toFixed(2);\n    this._setDescription();\n  }\n}\nclass Cycling extends Workout {\n  constructor(id, distance, duration, coords, elevationGain) {\n    super(id, distance, duration, coords);\n    this.name = 'Cycling';\n    this.speed = ((distance / duration) * 60).toFixed(2);\n    this.elevationGain = elevationGain;\n    this._setDescription();\n  }\n}\n\nconst aplicacion = new App();\nconsole.log(Id);\n\nconsole.log(workoutsObj);\n"],"names":["months","form","document","querySelector","containerWorkouts","inputType","inputDistance","inputDuration","inputCadence","inputElevation","map","L","botonAgregar","botonQuitar","now","Date","resetBtn","editBtn","eraseBtn","formBtn","dateOptions","hour","minute","day","month","year","workoutElement","sateliteImg","relieveImg","findMe","Id","trainingType","popUpContent","lastTraining","mapEvent","mapType","editingWorkout","workoutsObj","swappingTypes","editingTime","prueba","e","editionWorkout","App","constructor","this","_getLocalStorage","_getPosition","forEach","workout","_markerRender","_toggleElevationField","on","_showForm","addEventListener","_newWorkout","bind","_moveToPopUp","_resetLocalStorage","_showEditForm","_deleteWorkout","localStorage","removeItem","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","coords","longitude","setView","tileLayer","attribution","addTo","mapE","classList","remove","focus","value","popUpClass","mark","preventDefault","lat","lng","latlng","clickCoords","closest","contains","push","Cycling","_workoutRender","description","Running","add","_setLocalStorage","_editWorkout","_infoModifyWorkout","workoutEl","target","id","dataset","name","cadence","duration","distance","elevationGain","toggle","console","log","deleteId","location","reload","textContent","removeEventListener","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","toLowerCase","setPopupContent","openPopup","html","pace","speed","insertAdjacentHTML","editingId","speedPace","toFixed","animate","pan","data","parse","getItem","Workout","date","_setDescription","getMonth","getDate","super","aplicacion"],"version":3,"file":"index.a567e2f1.js.map"}